# Generated by Django 3.0.5 on 2020-05-16 15:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=64, verbose_name='Имя')),
                ('patronymic', models.CharField(max_length=64, verbose_name='Отчество')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Название собрания')),
                ('serie', models.CharField(blank=True, max_length=128, null=True, verbose_name='Серия')),
                ('description', models.CharField(blank=True, max_length=128, null=True, verbose_name='Характер собрания')),
                ('editorship', models.CharField(blank=True, max_length=128, null=True, verbose_name='Под редакцией')),
            ],
            options={
                'verbose_name': 'Собрание работ',
                'verbose_name_plural': 'Собрания работ',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='GenericWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Работа',
                'verbose_name_plural': 'Работы',
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Владелец патента')),
            ],
            options={
                'verbose_name': 'Владелец патента',
                'verbose_name_plural': 'Владельцы патентов',
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Тип работы')),
            ],
            options={
                'verbose_name': 'Тип работы',
                'verbose_name_plural': 'Типы работ',
            },
        ),
        migrations.CreateModel(
            name='WorkAuthorship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pages_authored', models.PositiveIntegerField(blank=True, null=True, verbose_name='Страницы авторства')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publications_app.Author', verbose_name='Автор')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publications_app.GenericWork', verbose_name='Работа')),
            ],
            options={
                'verbose_name': 'Авторство',
                'verbose_name_plural': 'Авторства',
                'unique_together': {('author', 'work')},
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Издатель')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='publications_app.City', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Издатель',
                'verbose_name_plural': 'Издатели',
            },
        ),
        migrations.AddField(
            model_name='genericwork',
            name='authors',
            field=models.ManyToManyField(blank=True, through='publications_app.WorkAuthorship', to='publications_app.Author', verbose_name='Авторы'),
        ),
        migrations.AddField(
            model_name='genericwork',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_publications_app.genericwork_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='genericwork',
            name='work_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='publications_app.WorkType', verbose_name='Тип работы'),
        ),
        migrations.CreateModel(
            name='CollectionIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2020)], verbose_name='Год выхода')),
                ('issue', models.CharField(blank=True, max_length=512, null=True, verbose_name='Номер выпуска')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='publications_app.Collection', verbose_name='Собрание работ')),
            ],
            options={
                'verbose_name': 'Выпуск собрания',
                'verbose_name_plural': 'Выпуски собраний',
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='publications_app.Publisher', verbose_name='Издатель'),
        ),
        migrations.AddField(
            model_name='author',
            name='works',
            field=models.ManyToManyField(blank=True, through='publications_app.WorkAuthorship', to='publications_app.GenericWork', verbose_name='Работы'),
        ),
        migrations.CreateModel(
            name='Patent',
            fields=[
                ('genericwork_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='publications_app.GenericWork')),
                ('patent_code', models.PositiveIntegerField(verbose_name='Код патента')),
                ('ipc', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator('[A-H][0-9][1-9][A-Z] [1-9][0-9]{0,2}\\[0-9]{2}', message='Введите код МПК в соответсвии со схемой (напр. A01B 12/34)!')], verbose_name='Код МПК')),
                ('patent_number', models.CharField(max_length=24, verbose_name='Номер патента')),
                ('issue_date', models.DateField(verbose_name='Дата заявки')),
                ('publication_date', models.DateField(verbose_name='Дата публикации')),
                ('bulletin_number', models.PositiveIntegerField(verbose_name='Номер бюллетня')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='publications_app.Country', verbose_name='Страна')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='publications_app.Owner', verbose_name='Владелец патента')),
            ],
            options={
                'verbose_name': 'Патент',
                'verbose_name_plural': 'Патенты',
            },
            bases=('publications_app.genericwork',),
        ),
        migrations.CreateModel(
            name='IndependentWork',
            fields=[
                ('genericwork_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='publications_app.GenericWork')),
                ('year', models.PositiveIntegerField(default=2020, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2020)], verbose_name='Год')),
                ('pages_number', models.PositiveIntegerField(verbose_name='Число страниц')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='publications_app.Publisher', verbose_name='Издатель')),
            ],
            options={
                'verbose_name': 'Самостоятельная работа',
                'verbose_name_plural': 'Самостоятельные работы',
            },
            bases=('publications_app.genericwork',),
        ),
        migrations.CreateModel(
            name='CollectionWork',
            fields=[
                ('genericwork_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='publications_app.GenericWork')),
                ('pages_number', models.PositiveIntegerField(verbose_name='Число страниц')),
                ('pages_from', models.PositiveIntegerField(verbose_name='Страница начала')),
                ('collection_issue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='publications_app.CollectionIssue', verbose_name='Выпуск собрания')),
            ],
            options={
                'verbose_name': 'Работа в собрании',
                'verbose_name_plural': 'Работы в собраниях',
            },
            bases=('publications_app.genericwork',),
        ),
    ]
